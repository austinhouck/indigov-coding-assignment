version: '3.8'

services:
  db:
    image: postgres:14-alpine
    container_name: postgres-db-dev
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres-data-dev:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - app-network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: express-typescript-server-dev
    ports:
      - "8080:8080"
    volumes:
      - ./server:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=8080
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    command: npm run dev
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - app-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: react-client-dev
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8080
    command: npm start
    depends_on:
      - server
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres-data-dev:

networks:
  app-network:
    driver: bridge
